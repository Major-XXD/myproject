# Stop all services
~/stop_all_services.sh

# Remove the problematic admin directory completely
rm -rf ~/pihole/var/www/html/admin

# Create fresh admin directory
mkdir -p ~/pihole/var/www/html/admin

# Create the simple Pi-hole admin interface
cat > ~/pihole/var/www/html/admin/index.php << 'EOF'
<?php
// Simple Pi-hole dashboard
$pihole_log = '/data/data/com.termux/files/home/pihole/var/log/pihole.log';
$blocklist_file = '/data/data/com.termux/files/home/pihole/etc/adlists.list';
$dnsmasq_conf = '/data/data/com.termux/files/home/pihole/etc/dnsmasq.conf';

function getPiholeStats() {
    global $pihole_log, $blocklist_file;
    
    $stats = array(
        'blocked_domains' => 0,
        'queries_today' => 0,
        'blocked_today' => 0,
        'status' => 'Unknown',
        'uptime' => 'Unknown'
    );
    
    // Count blocked domains
    if (file_exists($blocklist_file)) {
        $stats['blocked_domains'] = count(file($blocklist_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES));
    }
    
    // Check if dnsmasq is running
    $dnsmasq_pid = shell_exec('pgrep dnsmasq');
    $stats['status'] = trim($dnsmasq_pid) ? 'Active' : 'Inactive';
    
    // Get recent log entries
    if (file_exists($pihole_log) && filesize($pihole_log) > 0) {
        $log_lines = file($pihole_log, FILE_IGNORE_NEW_LINES);
        $recent_logs = array_slice($log_lines, -10);
        $stats['recent_logs'] = $recent_logs;
        
        // Count today's queries (simplified)
        $today = date('M d');
        $stats['queries_today'] = count(array_filter($log_lines, function($line) use ($today) {
            return strpos($line, $today) !== false;
        }));
    }
    
    return $stats;
}

$stats = getPiholeStats();

// Handle actions
if (isset($_GET['action'])) {
    switch($_GET['action']) {
        case 'restart':
            shell_exec('~/pihole/stop_pihole.sh && ~/pihole/start_pihole.sh > /dev/null 2>&1 &');
            $message = "Pi-hole services restarted!";
            break;
        case 'update':
            shell_exec('~/pihole/update_blocklists.sh > /dev/null 2>&1 &');
            $message = "Blocklists update started!";
            break;
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <title>Pi-hole Admin - Android</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        .header {
            background: rgba(255,255,255,0.95);
            padding: 20px;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 0 20px;
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        .stat-card {
            background: rgba(255,255,255,0.95);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            text-align: center;
        }
        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            color: #667eea;
            margin: 10px 0;
        }
        .status-active { color: #4CAF50; }
        .status-inactive { color: #f44336; }
        .actions {
            background: rgba(255,255,255,0.95);
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
        }
        .btn {
            background: #667eea;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            display: inline-block;
            margin: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }
        .btn:hover { background: #764ba2; }
        .btn-danger { background: #f44336; }
        .btn-danger:hover { background: #d32f2f; }
        .logs {
            background: rgba(255,255,255,0.95);
            padding: 20px;
            border-radius: 10px;
            margin: 20px 0;
            max-height: 300px;
            overflow-y: auto;
        }
        .log-entry {
            font-family: monospace;
            font-size: 12px;
            padding: 5px;
            border-bottom: 1px solid #eee;
            word-break: break-all;
        }
        .message {
            background: #4CAF50;
            color: white;
            padding: 10px;
            border-radius: 5px;
            margin: 10px 0;
        }
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üõ°Ô∏è Pi-hole Admin Dashboard</h1>
        <p>Network-wide Ad Blocking on Android</p>
    </div>

    <div class="container">
        <?php if (isset($message)): ?>
            <div class="message"><?php echo $message; ?></div>
        <?php endif; ?>

        <div class="stats-grid">
            <div class="stat-card">
                <h3>üü¢ Status</h3>
                <div class="stat-number status-<?php echo strtolower($stats['status']); ?>">
                    <?php echo $stats['status']; ?>
                </div>
                <p>DNS Filtering</p>
            </div>
            
            <div class="stat-card">
                <h3>üö´ Blocked</h3>
                <div class="stat-number"><?php echo number_format($stats['blocked_domains']); ?></div>
                <p>Domains on Blocklist</p>
            </div>
            
            <div class="stat-card">
                <h3>üìä Queries</h3>
                <div class="stat-number"><?php echo number_format($stats['queries_today']); ?></div>
                <p>DNS Requests Today</p>
            </div>
            
            <div class="stat-card">
                <h3>‚è∞ Time</h3>
                <div class="stat-number" style="font-size: 1.5em;"><?php echo date('H:i:s'); ?></div>
                <p><?php echo date('M d, Y'); ?></p>
            </div>
        </div>

        <div class="actions">
            <h3>üîß Quick Actions</h3>
            <a href="?action=restart" class="btn">üîÑ Restart Pi-hole</a>
            <a href="?action=update" class="btn">üì• Update Blocklists</a>
            <a href="/" class="btn">üè† Main Site</a>
            <a href="/info.php" class="btn">üìä Server Info</a>
            <a href="logs.php" class="btn">üìã View Logs</a>
        </div>

        <div class="info-grid">
            <div class="actions">
                <h3>‚öôÔ∏è Configuration</h3>
                <p><strong>DNS Server:</strong> 127.0.0.1:53</p>
                <p><strong>Web Interface:</strong> Port 8080</p>
                <p><strong>Platform:</strong> Android Termux</p>
                <p><strong>Device:</strong> Samsung Galaxy S9+</p>
            </div>
            
            <div class="actions">
                <h3>üìÅ File Paths</h3>
                <p><strong>Log:</strong> ~/pihole/var/log/pihole.log</p>
                <p><strong>Blocklist:</strong> ~/pihole/etc/adlists.list</p>
                <p><strong>DNS Config:</strong> ~/pihole/etc/dnsmasq.conf</p>
            </div>
        </div>

        <?php if (isset($stats['recent_logs']) && !empty($stats['recent_logs'])): ?>
        <div class="logs">
            <h3>üìã Recent DNS Queries (Last 10)</h3>
            <?php foreach (array_reverse($stats['recent_logs']) as $log): ?>
                <div class="log-entry"><?php echo htmlspecialchars($log); ?></div>
            <?php endforeach; ?>
        </div>
        <?php else: ?>
        <div class="logs">
            <h3>üìã DNS Logs</h3>
            <p>No recent logs available. DNS queries will appear here once Pi-hole starts processing requests.</p>
        </div>
        <?php endif; ?>
    </div>

    <script>
        // Auto-refresh every 30 seconds
        setTimeout(function() {
            window.location.reload();
        }, 30000);
    </script>
</body>
</html>
EOF

# Create logs viewer page
cat > ~/pihole/var/www/html/admin/logs.php << 'EOF'
<?php
$pihole_log = '/data/data/com.termux/files/home/pihole/var/log/pihole.log';
$lines_to_show = isset($_GET['lines']) ? (int)$_GET['lines'] : 100;
?>
<!DOCTYPE html>
<html>
<head>
    <title>Pi-hole Logs</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body { font-family: monospace; margin: 20px; background: #f5f5f5; }
        .container { background: white; padding: 20px; border-radius: 10px; }
        .log-entry { padding: 2px 0; font-size: 12px; border-bottom: 1px solid #eee; }
        .header { background: #667eea; color: white; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
        .controls { margin-bottom: 20px; }
        .btn { background: #667eea; color: white; padding: 8px 15px; text-decoration: none; border-radius: 3px; margin: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h2>üìã Pi-hole DNS Query Logs</h2>
            <p>Real-time DNS query monitoring</p>
        </div>
        
        <div class="controls">
            <a href="?lines=50" class="btn">Last 50</a>
            <a href="?lines=100" class="btn">Last 100</a>
            <a href="?lines=500" class="btn">Last 500</a>
            <a href="index.php" class="btn">‚Üê Back to Admin</a>
        </div>

        <div id="logs">
            <?php
            if (file_exists($pihole_log) && filesize($pihole_log) > 0) {
                $log_lines = file($pihole_log, FILE_IGNORE_NEW_LINES);
                $recent_logs = array_slice($log_lines, -$lines_to_show);
                
                foreach (array_reverse($recent_logs) as $log) {
                    echo '<div class="log-entry">' . htmlspecialchars($log) . '</div>';
                }
            } else {
                echo '<div class="log-entry">No logs available yet. Start using Pi-hole to see DNS queries here.</div>';
            }
            ?>
        </div>
    </div>

    <script>
        // Auto-refresh every 10 seconds
        setTimeout(function() {
            window.location.reload();
        }, 10000);
    </script>
</body>
</html>
EOF

# Create a test page to verify PHP is working
cat > ~/pihole/var/www/html/admin/test.php << 'EOF'
<?php
echo "<h1>üß™ PHP Test - SUCCESS!</h1>";
echo "<p><strong>‚úÖ PHP is working correctly!</strong></p>";
echo "<p>Time: " . date('Y-m-d H:i:s T') . "</p>";
echo "<p>PHP Version: " . phpversion() . "</p>";
echo "<p>Server: " . $_SERVER['SERVER_SOFTWARE'] . "</p>";
echo "<p><a href='index.php'>‚Üê Back to Pi-hole Admin</a></p>";
?>
EOF

# Set proper permissions
chmod -R 755 ~/pihole/var/www/html/
chmod 644 ~/pihole/var/www/html/admin/*.php

# Create directory structure if missing
mkdir -p ~/pihole/var/log
mkdir -p ~/pihole/var/run
touch ~/pihole/var/log/pihole.log

# Start services
~/start_all_services.sh